1. Create a Database

use Library

2. Create collections


db.createCollection("libraries")
db.createCollection("books")
db.createCollection("authors")

3. Insert sample documents

db.libraries.insertMany([
  { _id: ObjectId("60d5fbb2f295f5e2c4d5a8a1"), name: "Central Library", location: "Downtown" },
  { _id: ObjectId("60d5fbb2f295f5e2c4d5a8a2"), name: "Westside Branch", location: "Westside" }
])

db.books.insertMany([
  {
    _id: ObjectId("60d5fc5ef295f5e2c4d5a8a3"),
    title: "To Kill a Mockingbird",
    library_id: ObjectId("60d5fbb2f295f5e2c4d5a8a1"),
    author_ids: [ObjectId("60d5fd3ef295f5e2c4d5a8a4")]
  },
  {
    _id: ObjectId("60d5fc5ef295f5e2c4d5a8a5"),
    title: "1984",
    library_id: ObjectId("60d5fbb2f295f5e2c4d5a8a2"),
    author_ids: [ObjectId("60d5fd3ef295f5e2c4d5a8a6")]
  },
  {
    _id: ObjectId("60d5fc5ef295f5e2c4d5a8a7"),
    title: "Harry Potter and the Philosopher's Stone",
    library_id: ObjectId("60d5fbb2f295f5e2c4d5a8a1"),
    author_ids: [
      ObjectId("60d5fd3ef295f5e2c4d5a8a8"),
      ObjectId("60d5fd3ef295f5e2c4d5a8a9")
    ]
  }
])

db.authors.insertMany([
  { _id: ObjectId("60d5fd3ef295f5e2c4d5a8a4"), name: "Harper Lee", birth_year: 1926 },
  { _id: ObjectId("60d5fd3ef295f5e2c4d5a8a6"), name: "George Orwell", birth_year: 1903 },
  { _id: ObjectId("60d5fd3ef295f5e2c4d5a8a8"), name: "J.K. Rowling", birth_year: 1965 },
  { _id: ObjectId("60d5fd3ef295f5e2c4d5a8a9"), name: "John Tiffany", birth_year: 1971 }
])

4. Find all books in the "Central Library"

const centralLibrary = db.libraries.findOne({ name: "Central Library" })
db.books.find({ library_id: centralLibrary._id })

5. List all libraries with the number of books they have

db.books.aggregate([
  { $group: { _id: "$library_id", bookCount: { $sum: 1 } } },
  {
    $lookup: {
      from: "libraries",
      localField: "_id",
      foreignField: "_id",
      as: "library"
    }
  },
  { $unwind: "$library" },
  { $project: { _id: 0, library: "$library.name", bookCount: 1 } }
])

6. Find all books written by "J.K. Rowling"


const jkRowling = db.authors.findOne({ name: "J.K. Rowling" })
db.books.find({ author_ids: jkRowling._id })

7. List all authors along with the books they have written


db.authors.aggregate([
  {
    $lookup: {
      from: "books",
      localField: "_id",
      foreignField: "author_ids",
      as: "books"
    }
  },
  {
    $project: {
      _id: 0,
      author: "$name",
      books: "$books.title"
    }
  }
])

8. Find all books along with their authors' details

db.books.aggregate([
  {
    $lookup: {
      from: "authors",
      localField: "author_ids",
      foreignField: "_id",
      as: "authors"
    }
  },
  {
    $project: {
      _id: 0,
      title: 1,
      authors: { name: 1, birth_year: 1 }
    }
  }
])

9. List all libraries and number of books (include those with no books)

db.libraries.aggregate([
  {
    $lookup: {
      from: "books",
      localField: "_id",
      foreignField: "library_id",
      as: "books"
    }
  },
  {
    $project: {
      _id: 0,
      name: 1,
      bookCount: { $size: "$books" }
    }
  }
])

10. Calculate average number of books per library

db.books.aggregate([
  {
    $group: {
      _id: "$library_id",
      count: { $sum: 1 }
    }
  },
  {
    $group: {
      _id: null,
      averageBooks: { $avg: "$count" }
    }
  }
])

11. Find all authors who have written more than one book

db.books.aggregate([
  { $unwind: "$author_ids" },
  { $group: { _id: "$author_ids", bookCount: { $sum: 1 } } },
  { $match: { bookCount: { $gt: 1 } } },
  {
    $lookup: {
      from: "authors",
      localField: "_id",
      foreignField: "_id",
      as: "author"
    }
  },
  { $unwind: "$author" },
  { $project: { _id: 0, author: "$author.name", bookCount: 1 } }
])

12. Retrieve all books with their authors and the library they belong to12. Retrieve all books with their authors and the library they belong to

db.books.aggregate([
  {
    $lookup: {
      from: "authors",
      localField: "author_ids",
      foreignField: "_id",
      as: "authors"
    }
  },
  {
    $lookup: {
      from: "libraries",
      localField: "library_id",
      foreignField: "_id",
      as: "library"
    }
  },
  { $unwind: "$library" },
  {
    $project: {
      _id: 0,
      title: 1,
      authors: "$authors.name",
      library: "$library.name"
    }
  }
])

13. List all authors who have not written any books

db.authors.aggregate([
  {
    $lookup: {
      from: "books",
      localField: "_id",
      foreignField: "author_ids",
      as: "books"
    }
  },
  { $match: { books: { $eq: [] } } },
  { $project: { _id: 0, name: 1 } }
])

